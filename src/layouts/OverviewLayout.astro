---
import { type CollectionEntry } from "astro:content";
import Button from '@react-ui/button/Button';
import Container from "../components/Container.astro";
import {DownloadButton} from "../components/Button/DownloadButton"
import BaseLayout from "./BaseLayout.astro";
import { Display, Text } from "@components/typography";
import { Rating } from "@components/Rating"
import {TemplateStack} from "@components/TemplateStack"

type Props = CollectionEntry<"templates">;
const collection = Astro.props;
const template = collection.data
---

<BaseLayout {...template} title={`${template.name.charAt(0).toUpperCase() + template.name.slice(1)} | Tailus UI Template`} description={template.shortDescription}>
    <main>
        <section class="pt-28 sm:pt-32 md:pt-40">
            <Container>
                <div class="max-w-lg">
                    <Display weight={{initial:"medium"}} size="4xl" className="sm:text-5xl">
                        { template.title && template.title}
                    </Display>
                    <div class="max-w-lg">
                        <Text>
                            {template.shortDescription}
                        </Text>
                        <div class="flex flex-wrap gap-x-1.5 gap-y-3 items-center">
                            {
                                template.stack.map((stack) => (
                                    <TemplateStack stack={stack} />
                                ))
                            }
                            <span class="mx-1 size-1 rounded-full bg-[--ui-border-color]" />
                            {
                                template.rating && (
                                    <Rating rating={template.rating.rate} ratings={template.rating.count} />
                                    <span class="mx-1 size-1 rounded-full bg-[--ui-border-color]" />
                                )
                            }
                            <Text size="sm" neutral className="my-0 flex gap-1.5 items-center">
                                { template.price }
                            </Text>
                        </div>
                        <div class="mt-6 flex gap-3 flex-wrap">
                            {
                                template.price == "Free" ? 
                                <DownloadButton 
                                    downloadLink={template.purchaseLink}
                                    githubLink={template.githubLink ?? ''}
                                    size="sm"
                                    client:load 
                                /> : 
                                <Button.Root href={template.purchaseLink} variant="solid" intent="neutral" size="sm">
                                    <Button.Label>Purchase</Button.Label>
                                </Button.Root>
                            }
                            <Button.Root href={template.previewLink} size="sm" variant="outlined" intent="gray">
                                <Button.Label>Live Preview</Button.Label>
                            </Button.Root>
                        </div>
                    </div>
                </div>
                <img 
                    class="my-20 border rounded-[--card-radius] bg-white" 
                    src={template.coverImageLink} 
                    alt={`Tailus ${template.name} cover`} 
                    loading="lazy" 
                    width="2400" 
                    height="1800" 
                />
                <div class="grid md:grid-cols-12 gap-12">
                    <div class="relative z-10 -mt-6 md:col-span-8 space-y-20">
                        <slot />
                    </div>
                     <div class="md:col-span-4 md:sticky md:top-12 h-fit md:p-[--card-padding] md:border rounded-[--card-radius]">
                        <div class="mb-8 grid h-max w-full gap-3">
                            <Text className="my-0 flex gap-1.5 items-center">
                                { template.price }
                            </Text>
                            {
                                template.price == "Free" ? 
                                <DownloadButton 
                                    downloadLink={template.purchaseLink}
                                    githubLink={template.githubLink ?? ''}
                                    size="sm"
                                    client:load 
                                /> : 
                                <Button.Root href={template.purchaseLink} variant="solid" intent="primary" size="sm">
                                    <Button.Label>Purchase</Button.Label>
                                </Button.Root>
                            }
                            <Button.Root href={template.previewLink} size="sm" variant="outlined" intent="gray">
                                <Button.Label>Preview</Button.Label>
                            </Button.Root>
                        </div>

                        <ul class="-mb-[--card-padding] -mx-[--card-padding] px-[--card-padding] border-t border-gray-200 dark:border-gray-800 *:text-sm *:border-b *:border-dashed *:py-3 *:flex *:items-center *:gap-3 text-gray-700 dark:text-gray-300">
                            <li>
                                <svg class="size-5" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 48 48"><defs><mask id="ipTEdit0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M7 42h36"/><path fill="#555" d="M11 26.72V34h7.317L39 13.308L31.695 6z"/></g></mask></defs><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipTEdit0)"/></svg>
                                100% Customizable
                            </li>
                            <li>
                                <svg class="size-5" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 256 256"><g fill="currentColor"><path d="m194.82 151.43l-51.66 19a7.88 7.88 0 0 0-4.69 4.69l-19 51.66a7.92 7.92 0 0 1-14.86 0l-19-51.66a7.88 7.88 0 0 0-4.69-4.69l-51.66-19a7.92 7.92 0 0 1 0-14.86l51.66-19a7.88 7.88 0 0 0 4.69-4.69l19-51.66a7.92 7.92 0 0 1 14.86 0l19 51.66a7.88 7.88 0 0 0 4.69 4.69l51.66 19a7.92 7.92 0 0 1 0 14.86" opacity="0.2"/><path d="m197.58 129.06l-51.61-19l-19-51.65a15.92 15.92 0 0 0-29.88 0L78.07 110l-51.65 19a15.92 15.92 0 0 0 0 29.88L78 178l19 51.62a15.92 15.92 0 0 0 29.88 0l19-51.61l51.65-19a15.92 15.92 0 0 0 0-29.88ZM140.39 163a15.87 15.87 0 0 0-9.43 9.43l-19 51.46L93 172.39a15.87 15.87 0 0 0-9.39-9.39l-51.46-19l51.46-19a15.87 15.87 0 0 0 9.39-9.39l19-51.46l19 51.46a15.87 15.87 0 0 0 9.43 9.43l51.46 19ZM144 40a8 8 0 0 1 8-8h16V16a8 8 0 0 1 16 0v16h16a8 8 0 0 1 0 16h-16v16a8 8 0 0 1-16 0V48h-16a8 8 0 0 1-8-8m104 48a8 8 0 0 1-8 8h-8v8a8 8 0 0 1-16 0v-8h-8a8 8 0 0 1 0-16h8v-8a8 8 0 0 1 16 0v8h8a8 8 0 0 1 8 8"/></g></svg>
                                Modern and Trendy
                            </li>
                            <li>
                                <svg class="size-5" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="1.5"><circle cx="12" cy="12" r="10" opacity="0.5"/><path d="M14 7a2 2 0 1 1-4 0a2 2 0 0 1 4 0Z"/><path stroke-linecap="round" d="M18 10s-3.537 1.5-6 1.5S6 10 6 10m6 2v1.452a3 3 0 0 0 .476 1.623L15 19"/><path stroke-linecap="round" d="M12 12v1.452a3 3 0 0 1-.476 1.623L9 19"/></g></svg>
                                Accessible
                            </li>
                            <li>
                                <svg class="size-5" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 32 32"><path fill="currentColor" d="M6 8a3 3 0 0 1 3-3h16a3 3 0 0 1 3 3v10a3 3 0 0 1-3 3h-8v-2h8a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1H7c-.345 0-.68.044-1 .126zm23 17H17v-2h12a1 1 0 1 1 0 2M9 25a1 1 0 1 0 0-2a1 1 0 0 0 0 2M3 13a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm3-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V13a1 1 0 0 0-1-1z"/></svg>
                                Fully Responsive
                            </li>
                        </ul>
                    </div>
                </div>
            </Container>
        </section>
    </main>
</BaseLayout>
